@startuml
scale 0.6
!include style.puml

skinparam ArrowFontSize 60

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":ModManagerParser" as ModManagerParser LOGIC_COLOR
participant ":TaskCommandParser" as TaskCommandParser LOGIC_COLOR
participant ":TaskForOneModuleCommandParser" as TaskForOneModuleCommandParser LOGIC_COLOR
participant "predicate:TaskForOneModuleCommand" as TaskForOneModuleCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "predicate:TaskContainsInModulePredicate" as TaskContainsInModulePredicate MODEL_COLOR
participant ":ModelManager" as ModelManager MODEL_COLOR
end box

[-> LogicManager : execute(\n"task module /code CS2103T")
activate LogicManager

LogicManager -> ModManagerParser : parseCommand(\n"task module /code CS2103T")
activate ModManagerParser

create TaskCommandParser
ModManagerParser -> TaskCommandParser
activate TaskCommandParser

TaskCommandParser --> ModManagerParser
deactivate TaskCommandParser

ModManagerParser -> TaskCommandParser : parse("module /code CS2103T")
activate TaskCommandParser

create TaskForOneModuleCommandParser
TaskCommandParser -> TaskForOneModuleCommandParser
activate TaskForOneModuleCommandParser

TaskForOneModuleCommandParser --> TaskCommandParser
deactivate TaskForOneModuleCommandParser

TaskCommandParser -> TaskForOneModuleCommandParser : parse("/code CS2103T")
activate TaskForOneModuleCommandParser

create TaskContainsInModulePredicate
TaskForOneModuleCommandParser -> TaskContainsInModulePredicate : TaskContainsInModulePredicate("CS2103T")
activate TaskContainsInModulePredicate

TaskContainsInModulePredicate --> TaskForOneModuleCommandParser : predicate
deactivate TaskContainsInModulePredicate

create TaskForOneModuleCommand
TaskForOneModuleCommandParser -> TaskForOneModuleCommand : TaskForOneModuleCommand(predicate)
activate TaskForOneModuleCommand

TaskForOneModuleCommand --> TaskForOneModuleCommandParser : predicate
deactivate TaskForOneModuleCommand

TaskForOneModuleCommandParser --> TaskCommandParser : predicate
deactivate TaskForOneModuleCommandParser
TaskForOneModuleCommandParser -[hidden]-> TaskCommandParser
destroy TaskForOneModuleCommandParser

TaskCommandParser --> ModManagerParser : predicate
deactivate TaskCommandParser
TaskCommandParser -[hidden]-> ModManagerParser
destroy TaskCommandParser

ModManagerParser --> LogicManager : predicate
deactivate ModManagerParser

LogicManager -> TaskForOneModuleCommand : execute()
activate TaskForOneModuleCommand

TaskForOneModuleCommand -> ModelManager : updateFilteredTaskList(predicate)
activate ModelManager

ModelManager --> TaskForOneModuleCommand
deactivate ModelManager

TaskContainsInModulePredicate -[hidden]-> ModelManager
destroy TaskContainsInModulePredicate

create CommandResult
TaskForOneModuleCommand -> CommandResult
activate CommandResult

CommandResult --> TaskForOneModuleCommand
deactivate CommandResult

TaskForOneModuleCommand --> LogicManager : result
deactivate TaskForOneModuleCommand
TaskForOneModuleCommand -[hidden]-> LogicManager
destroy TaskForOneModuleCommand

[<--LogicManager
deactivate LogicManager
@enduml

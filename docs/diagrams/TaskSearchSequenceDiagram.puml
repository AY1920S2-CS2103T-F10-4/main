@startuml
scale 0.6
!include style.puml

skinparam ArrowFontSize 60

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":ModManagerParser" as ModManagerParser LOGIC_COLOR
participant ":TaskCommandParser" as TaskCommandParser LOGIC_COLOR
participant ":TaskSearchCommandParser" as TaskSearchCommandParser LOGIC_COLOR
participant ":TaskSearchCommand" as TaskSearchCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "p:NameContainsKeywordsPredicate" as NameContainsKeywordsPredicate MODEL_COLOR
participant ":ModelManager" as ModelManager MODEL_COLOR
end box

[-> LogicManager : execute\n("task search /day 25 /month 6 ")
activate LogicManager

'to recheck
LogicManager -> ModManagerParser : parseCommand\n(" task search /day 25 /month 6")
activate ModManagerParser

create TaskCommandParser
ModManagerParser -> TaskCommandParser
activate TaskCommandParser

TaskCommandParser --> ModManagerParser
deactivate TaskCommandParser

ModManagerParser -> TaskCommandParser : parse("search /day 25 /month 6")
activate TaskCommandParser

create TaskSearchCommandParser
TaskCommandParser -> TaskSearchCommandParser
activate TaskSearchCommandParser

TaskSearchCommandParser --> TaskCommandParser
deactivate TaskSearchCommandParser

TaskCommandParser -> TaskSearchCommandParser : parse("/day 25 /month 6")
activate TaskSearchCommandParser

create TaskSearchPredicate
TaskSearchCommandParser -> TaskSearchPredicate : TaskSearchPredicate({"day": 25, "month": 6})
activate TaskSearchPredicate

NameContainsKeywordsPredicate --> TaskSearchCommandParser : predicate
deactivate NameContainsKeywordsPredicate

create TaskSearchCommand
TaskSearchCommandParser -> TaskSearchCommand : TaskSearchCommand(p)
activate TaskSearchCommand

TaskSearchCommand --> TaskSearchCommandParser : search
deactivate TaskSearchCommand

TaskSearchCommandParser --> TaskCommandParser : search
deactivate TaskSearchCommandParser
TaskSearchCommandParser -[hidden]-> TaskCommandParser
destroy TaskSearchCommandParser

TaskCommandParser --> ModManagerParser : search
deactivate TaskCommandParser
TaskCommandParser -[hidden]-> ModManagerParser
destroy TaskCommandParser

ModManagerParser --> LogicManager : search
deactivate ModManagerParser

LogicManager -> TaskSearchCommand : execute()
activate TaskSearchCommand

TaskSearchCommand -> ModelManager : updateFilteredTaskList(predicate)
activate ModelManager

ModelManager --> TaskSearchCommand
deactivate ModelManager

NameContainsKeywordsPredicate -[hidden]-> ModelManager
destroy NameContainsKeywordsPredicate

create CommandResult
TaskSearchCommand -> CommandResult
activate CommandResult

CommandResult --> TaskSearchCommand
deactivate CommandResult

TaskSearchCommand --> LogicManager : result
deactivate TaskSearchCommand
TaskSearchCommand -[hidden]-> LogicManager
destroy TaskSearchCommand

[<--LogicManager
deactivate LogicManager
@enduml
